{"version":3,"sources":["images/Guilherme.png","images/Guilherme.webp","components/Header.tsx","components/Footer.tsx","pages/Home.tsx","pages/Posts.tsx","hooks/usePosts.ts","App.tsx","registerServiceWorker.js","index.js"],"names":["module","exports","HeaderContainer","styled","nav","StyledLink","NavLink","HeaderBorder","div","Header","exact","to","Container","footer","LinksContainer","Copyright","small","Border","Footer","target","rel","href","Date","getFullYear","MainContainer","main","MainTitle","h1","colorTransition","keyframes","OrangeTitle","span","DescriptionContainer","PictureContainer","ContentContainer","Image","img","Home","type","srcSet","ProfilePictureWEBP","ProfilePicturePNG","src","alt","width","height","PostCard","React","lazy","PostsFrame","PostsTitle","PostList","PlaceholderCard","PostsPlaceholder","Posts","useState","isLoading","setIsLoading","posts","setPosts","fetchController","useRef","AbortController","useEffect","currentController","current","fetch","signal","then","response","json","items","filter","item","categories","length","catch","error","console","log","abort","usePosts","fallback","map","post","key","guid","GlobalStyle","createGlobalStyle","App","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.d656f33f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Guilherme.ec469932.png\";","module.exports = __webpack_public_path__ + \"static/media/Guilherme.a2287def.webp\";","import React from 'react';\nimport styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nconst HeaderContainer = styled.nav`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  align-self: stretch;\n  padding: 20px 40px;\n\n  @media (max-width: 768px) {\n    padding: 20px 0;\n  }\n`;\n\nconst StyledLink = styled(NavLink)`\n  color: black;\n  margin-right: 20px;\n  font-size: 1.25rem;\n  font-weight: bold;\n  text-decoration: none;\n\n  :visited {\n    color: inherit;\n  }\n\n  :hover {\n    color: darkorange;\n  }\n\n  &.active {\n    color: darkorange;\n  }\n`;\n\nconst HeaderBorder = styled.div`\n  width: 300px;\n  max-width: 70%;\n  border-top: 2px solid darkorange;\n  align-self: flex-end;\n`;\n\nconst Header = () => {\n  return (\n    <>\n      <HeaderContainer>\n        <StyledLink exact to=\"/\">\n          HOME\n        </StyledLink>\n        <StyledLink to=\"/blog\">BLOG</StyledLink>\n      </HeaderContainer>\n      <HeaderBorder />\n    </>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.footer`\n  display: flex;\n  flex-direction: column;\n  align-self: stretch;\n  margin-bottom: 5px;\n`;\n\nconst LinksContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  margin: 20px;\n\n  span {\n    margin: 0 20px;\n\n    a {\n      font-size: 1.25rem;\n      color: #000;\n      font-weight: bold;\n      text-decoration: none;\n\n      :visited {\n        color: inherit;\n      }\n\n      :hover {\n        color: darkorange;\n      }\n    }\n  }\n\n  @media (max-width: 380px) {\n    span a {\n      font-size: 1rem;\n    }\n  }\n`;\n\nconst Copyright = styled.small`\n  text-align: center;\n`;\n\nconst Border = styled.div`\n  width: 500px;\n  max-width: 100%;\n  border-top: 2px solid darkorange;\n  align-self: center;\n`;\n\nconst Footer = () => (\n  <Container>\n    <Border />\n    <LinksContainer>\n      <span>\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://www.twitter.com/jgvarandas\"\n        >\n          TWITTER\n        </a>\n      </span>\n      <span>\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://github.com/gvarandas\"\n        >\n          GITHUB\n        </a>\n      </span>\n      <span>\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"mailto:jgvarandas@gmail.com\"\n        >\n          EMAIL\n        </a>\n      </span>\n    </LinksContainer>\n    <Copyright>\n      &copy; Copyright {new Date().getFullYear()}, Guilherme Varandas\n    </Copyright>\n  </Container>\n);\n\nexport default Footer;\n","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport ProfilePicturePNG from '../images/Guilherme.png';\nimport ProfilePictureWEBP from '../images/Guilherme.webp';\n\nconst MainContainer = styled.main`\n  display: flex;\n  flex: 1;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nconst MainTitle = styled.h1`\n  font-size: 8rem;\n  line-height: 1;\n  text-align: center;\n\n  @media (max-width: 800px) {\n    margin-left: 15px;\n    margin-right: 15px;\n    font-size: 7rem;\n  }\n\n  @media (max-width: 380px) {\n    font-size: 6rem;\n    margin-top: 40px;\n    margin-bottom: 40px;\n  }\n`;\n\nconst colorTransition = keyframes`\n  0% { color: black; }\n  50% { color: darkorange; }\n  100% { color: black; }\n`;\n\nconst OrangeTitle = styled.span`\n  color: darkorange;\n  animation: ${colorTransition} 10s infinite linear;\n`;\n\nconst DescriptionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  @media (max-width: 768px) {\n    margin: 20px;\n  }\n\n  @media (max-width: 380px) {\n    p {\n      margin-bottom: 0;\n    }\n  }\n`;\n\nconst PictureContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0 20px;\n`;\n\nconst ContentContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin: 0 20px;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nconst Image = styled.img`\n  width: 200px;\n  height: 200px;\n  border-radius: 100px;\n`;\n\nconst Home = () => (\n  <MainContainer>\n    <MainTitle>\n      HELLO <OrangeTitle>THERE</OrangeTitle>\n    </MainTitle>\n    <ContentContainer>\n      <PictureContainer>\n        <picture>\n          <source type=\"image/webp\" srcSet={ProfilePictureWEBP} />\n          <source type=\"image/jpeg\" srcSet={ProfilePicturePNG} />\n          <Image\n            src={ProfilePicturePNG}\n            alt=\"Guilherme Varandas' Avatar\"\n            width={200}\n            height={200}\n          />\n        </picture>\n      </PictureContainer>\n      <DescriptionContainer>\n        <p>\n          My name is <b>Guilherme Varandas</b> and I build things.\n        </p>\n        <p>\n          With a diverse set of skills, including <i>HTML</i>, <i>CSS</i> and{' '}\n          <i>JavaScript</i>, I <b>LOVE</b> to work with cool stuff.\n        </p>\n        <p>\n          From component bits using React, Vue or Angular, all the way to\n          scalable APIs.\n        </p>\n      </DescriptionContainer>\n    </ContentContainer>\n  </MainContainer>\n);\n\nexport default Home;\n","import React, { Suspense } from 'react';\nimport styled from 'styled-components';\nimport { usePosts } from '../hooks/usePosts';\n\nconst PostCard = React.lazy(() => import('../components/PostCard'));\n\nconst PostsFrame = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 20px 40px;\n  flex: 1;\n\n  @media (max-width: 380px) {\n    margin: 5px;\n  }\n`;\n\nconst PostsTitle = styled.h1`\n  text-align: center;\n`;\n\nconst PostList = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst PlaceholderCard = styled.div`\n  width: 300px;\n  height: 350px;\n  background: rgba(188, 188, 188, 0.5);\n  opacity: 0.4;\n  border-radius: 5px;\n  margin: 20px 5px;\n  box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\n`;\n\nconst PostsPlaceholder = () => (\n  <>\n    <PlaceholderCard />\n    <PlaceholderCard />\n    <PlaceholderCard />\n    <PlaceholderCard />\n  </>\n);\n\nconst Posts = () => {\n  const { isLoading, posts } = usePosts();\n  return (\n    <PostsFrame>\n      <PostsTitle>BLOG POSTS</PostsTitle>\n      <PostList>\n        <Suspense fallback={<PostsPlaceholder />}>\n          {isLoading ? (\n            <PostsPlaceholder />\n          ) : (\n            posts.map((post) => <PostCard key={post.guid} post={post} />)\n          )}\n        </Suspense>\n      </PostList>\n    </PostsFrame>\n  );\n};\n\nexport default Posts;\n","import React from 'react';\nimport { MediumPost } from '../types';\n\nconst MEDIUM_API_ADDRESS =\n  'https://api.rss2json.com/v1/api.json?rss_url=https://medium.com/feed/@gvarandas';\n\nexport const usePosts = () => {\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [posts, setPosts] = React.useState<MediumPost[]>([]);\n  const fetchController = React.useRef(new AbortController());\n\n  React.useEffect(() => {\n    const currentController = fetchController.current;\n    setIsLoading(true);\n    fetch(MEDIUM_API_ADDRESS, { signal: currentController.signal })\n      .then((response) => response.json())\n      .then((response: { items: MediumPost[] }) => {\n        const posts = response.items.filter((item) => item.categories.length);\n        setPosts(posts);\n        setIsLoading(false);\n      })\n      .catch((error) => console.log('error retrieving posts:', error));\n\n    return () => currentController.abort();\n  }, []);\n\n  return { posts, isLoading };\n};\n","import React from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from 'react-router-dom';\n\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nimport Home from './pages/Home';\nimport Posts from './pages/Posts';\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=Open+Sans:400,700');\n\n  * {\n    box-sizing: border-box;\n    font-family: \"Gilroy\", \"Open Sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n      \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n      sans-serif;\n  }\n  \n  body {\n    margin: 0;\n    padding: 0;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-text-size-adjust: 100%;\n    height: 100%;\n    background-color: #fefefe;\n  }\n`;\n\nconst Container = styled.div`\n  display: flex;\n  align-items: stretch;\n  flex-direction: column;\n  justify-content: center;\n  min-height: 100vh;\n`;\n\nconst App = () => (\n  <>\n    <GlobalStyle />\n    <Router>\n      <Container>\n        <Header />\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/blog\" component={Posts} />\n          <Redirect to=\"/\" />\n        </Switch>\n        <Footer />\n      </Container>\n    </Router>\n  </>\n);\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}