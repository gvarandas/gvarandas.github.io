{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","containers/PostsContainer.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","PostsContainer","placeholder","children","React","useState","isLoading","setIsLoading","posts","setPosts","fetchController","useRef","AbortController","useEffect","currentController","current","fetch","signal","then","response","json","items","filter","item","categories","catch","error","console","log","abort"],"mappings":"iIAGe,SAASA,EAAeC,EAAKC,GAC1C,OCJa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDGxB,CAAeA,IEJT,SAA+BA,EAAKC,GACjD,GAAMG,OAAOC,YAAYC,OAAON,IAAgD,uBAAxCM,OAAOC,UAAUC,SAASC,KAAKT,GAAvE,CAIA,IAAIU,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKhB,EAAII,OAAOC,cAAmBM,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAETnB,GAAKS,EAAKW,SAAWpB,GAH8CU,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFvBuB,CAAqBV,EAAKC,IGJ3C,WACb,MAAM,IAAIsB,UAAU,wDHG0C,G,2BIwBjDC,UAvBQ,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAAe,IAClBC,IAAMC,UAAS,GADG,GAC7CC,EAD6C,KAClCC,EADkC,SAE1BH,IAAMC,SAAS,IAFW,GAE7CG,EAF6C,KAEtCC,EAFsC,KAG9CC,EAAkBN,IAAMO,OAAO,IAAIC,iBAiBzC,OAfAR,IAAMS,WAAU,WACd,IAAMC,EAAoBJ,EAAgBK,QAW1C,OAVAR,GAAa,GACbS,MAVF,kFAU4B,CAAEC,OAAQH,EAAkBG,SACnDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GACJ,IAAMX,EAAQW,EAASE,MAAMC,QAAO,SAAAC,GAAI,OAAIA,EAAKC,WAAW1B,UAC5DW,EAASD,GACTD,GAAa,MAEdkB,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,0BAA2BF,MAElD,kBAAMZ,EAAkBe,WAC9B,IAEIvB,EAAYJ,IAAgBC,EAASK","file":"static/js/4.6884772a.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React from 'react';\n\nconst MEDIUM_API_ADDRESS =\n  'https://api.rss2json.com/v1/api.json?rss_url=https://medium.com/feed/@gvarandas';\n\nconst PostsContainer = ({ placeholder, children }) => {\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [posts, setPosts] = React.useState([]);\n  const fetchController = React.useRef(new AbortController());\n\n  React.useEffect(() => {\n    const currentController = fetchController.current;\n    setIsLoading(true);\n    fetch(MEDIUM_API_ADDRESS, { signal: currentController.signal })\n      .then(response => response.json())\n      .then(response => {\n        const posts = response.items.filter(item => item.categories.length);\n        setPosts(posts);\n        setIsLoading(false);\n      })\n      .catch(error => console.log('error retrieving posts:', error));\n\n    return () => currentController.abort();\n  }, []);\n\n  return isLoading ? placeholder() : children(posts);\n};\n\nexport default PostsContainer;\n"],"sourceRoot":""}